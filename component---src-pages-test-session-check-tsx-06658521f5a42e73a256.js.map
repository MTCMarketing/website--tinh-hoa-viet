{"version":3,"file":"component---src-pages-test-session-check-tsx-06658521f5a42e73a256.js","mappings":"+JAIe,SAASA,IACtB,MAAM,EAACC,EAAM,EAAEC,IAAaC,EAAAA,EAAAA,UAAS,2BAC/B,EAACC,EAAI,EAAEC,IAAWF,EAAAA,EAAAA,UAAc,MAoCtC,OAlCAG,EAAAA,EAAAA,WAAU,KAEaC,WACnB,MAAM,KAAEC,EAAI,MAAEC,SAAgBC,EAAAA,GAASC,KAAKC,aAC5C,GAAIH,EACFP,EAAU,8BAAgCO,EAAMI,cAIlD,GAAIL,EAAKM,QAAS,CAChB,MAAMC,EAAIP,EAAKM,QAAQV,KACvBC,EAAQU,GACRb,EAAU,kBAAkBa,EAAEC,MAChC,MACEd,EAAU,oBAIde,GAGA,MAAQT,KAAMU,GAAaR,EAAAA,GAASC,KAAKQ,kBAAkB,CAACC,EAAQN,KAC9DA,GAAWA,EAAQV,MACrBC,EAAQS,EAAQV,MAChBF,EAAU,kBAAkBY,EAAQV,KAAKY,SAEzCX,EAAQ,MACRH,EAAU,sBAId,MAAO,IAAMgB,EAASG,aAAaC,eAClC,IAGDC,EAAAA,cAAAA,MAAAA,CACEC,MAAO,CACLC,WAAY,YACZC,MAAO,QACPC,WAAY,OACZC,UAAW,QACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,WAGjBT,EAAAA,cAAAA,KAAAA,KAAI,6BACJA,EAAAA,cAAAA,IAAAA,KAAItB,GACHG,GACCmB,EAAAA,cAAAA,MAAAA,CACEC,MAAO,CACLG,WAAY,OACZM,QAAS,OACTC,aAAc,MACdC,SAAU,OACVT,MAAO,SAGRU,KAAKC,UAAUjC,EAAM,KAAM,IAKtC,C","sources":["webpack:///./src/pages/test/session-check.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"../../database/supabaseClient\";\n\nexport default function SessionCheck() {\n  const [status, setStatus] = useState(\"üîç Checking session...\");\n  const [user, setUser] = useState<any>(null);\n\n  useEffect(() => {\n    // Run once on load\n    const checkSession = async () => {\n      const { data, error } = await supabase.auth.getSession();\n      if (error) {\n        setStatus(\"‚ö†Ô∏è Error checking session: \" + error.message);\n        return;\n      }\n\n      if (data.session) {\n        const u = data.session.user;\n        setUser(u);\n        setStatus(`‚úÖ Logged in as ${u.email}`);\n      } else {\n        setStatus(\"‚ùå Not logged in\");\n      }\n    };\n\n    checkSession();\n\n    // Live listener (like Firebase's onAuthStateChanged)\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session && session.user) {\n        setUser(session.user);\n        setStatus(`‚úÖ Logged in as ${session.user.email}`);\n      } else {\n        setUser(null);\n        setStatus(\"‚ùå Not logged in\");\n      }\n    });\n\n    return () => listener.subscription.unsubscribe();\n  }, []);\n\n  return (\n    <div\n      style={{\n        fontFamily: \"monospace\",\n        color: \"white\",\n        background: \"#000\",\n        minHeight: \"100vh\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <h2>üß™ Supabase Session Check</h2>\n      <p>{status}</p>\n      {user && (\n        <pre\n          style={{\n            background: \"#111\",\n            padding: \"1rem\",\n            borderRadius: \"8px\",\n            fontSize: \"12px\",\n            color: \"#0f0\",\n          }}\n        >\n          {JSON.stringify(user, null, 2)}\n        </pre>\n      )}\n    </div>\n  );\n}\n"],"names":["SessionCheck","status","setStatus","useState","user","setUser","useEffect","async","data","error","supabase","auth","getSession","message","session","u","email","checkSession","listener","onAuthStateChange","_event","subscription","unsubscribe","React","style","fontFamily","color","background","minHeight","display","alignItems","justifyContent","flexDirection","padding","borderRadius","fontSize","JSON","stringify"],"sourceRoot":""}