{"version":3,"file":"component---src-pages-sign-up-tsx-bd5f057ef3238fde7a76.js","mappings":"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","sources":["webpack:///./src/database/functions.ts","webpack:///./src/componets/sign-up/SignUpV2.tsx","webpack:///./src/pages/sign-up.tsx"],"sourcesContent":["import { supabase } from \"./supabaseClient\";\n\n\nexport const handleLogout = async (\n  { onSuccess, onFail }: { onSuccess?: () => void; onFail?: () => void } = {}\n) => {\n  const { error } = await supabase.auth.signOut()\n  if (error) onFail?.()\n  else onSuccess?.()\n}\n\nexport const handleSignup = async ({\n  email,\n  password,\n  fullName,\n  onSuccess,\n  onFail,\n}: {\n  email: string\n  password: string\n  fullName?: string\n  onSuccess?: () => void\n  onFail?: (error?: string) => void\n}) => {\n  const { data, error } = await supabase.auth.signUp({\n    email,\n    password,\n    options: {\n      data: {\n        full_name: fullName || \"unknown\",\n        signup_source: \"thv-web\", // optional\n      },\n    },\n  })\n\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\n\nexport const handleLogin = async (\n  { email, password, onSuccess, onFail }: {\n    email: string\n    password: string\n    onSuccess?: () => void\n    onFail?: (error?: string) => void\n  }\n) => {\n  const { data, error } = await supabase.auth.signInWithPassword({ email, password })\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\nexport const handleResetPassword = async (\n  { email, onSuccess, onFail }: {\n    email: string\n    onSuccess?: () => void\n    onFail?: (error?: string) => void\n  }\n) => {\n  const { data, error } = await supabase.auth.resetPasswordForEmail(email)\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\nexport const handleUpdatePassword = async (\n  { newPassword, onSuccess, onFail }: {\n    newPassword: string\n    onSuccess?: () => void\n    onFail?: (error?: string) => void\n  }\n) => {\n  const { data, error } = await supabase.auth.updateUser({ password: newPassword })\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\n\n\nexport interface UpdateUserData {\n  fullName?: string;\n  phone?: string;\n  email?: string;\n  dob?: string;\n  address?: string;\n  hometown?: string;\n  field?: string;\n  goals?: string;\n  vision?: string;\n  status?: string;\n  avatar?: string;\n}\n\n/**\n * Updates user profile data across both tables: user_member & user_private\n * Automatically maps field names to Supabase column names.\n */\nexport const updateUserProfile = async (updates: UpdateUserData) => {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) throw new Error('Not logged in');\n\n    const memberPayload: any = {};\n    const privatePayload: any = {};\n\n    if (updates.fullName) memberPayload.full_name = updates.fullName;\n    if (updates.hometown) memberPayload.hometown = updates.hometown;\n    if (updates.field) memberPayload.field_of_expertise = updates.field;\n    if (updates.status) memberPayload.profile_status = updates.status;\n    if (updates.avatar) memberPayload.avatar_url = updates.avatar;\n\n    if (updates.phone) privatePayload.phone = updates.phone;\n    if (updates.email) privatePayload.email = updates.email;\n    if (updates.address) privatePayload.address = updates.address;\n    if (updates.dob) privatePayload.dob = updates.dob;\n    if (updates.goals) privatePayload.personal_goals = updates.goals;\n    if (updates.vision) privatePayload.future_vision = updates.vision;\n\n    // Run updates separately depending on which data is provided\n    if (Object.keys(memberPayload).length > 0)\n      await supabase.from('user_member').update(memberPayload).eq('id', user.id);\n\n    if (Object.keys(privatePayload).length > 0)\n      await supabase.from('user_private').update(privatePayload).eq('id', user.id);\n\n    return { success: true };\n  } catch (error) {\n    console.error('Update user profile failed:', error);\n    return { success: false, error };\n  }\n};\n","import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\nimport './sign-up.css';\nimport { FiArrowRight } from 'react-icons/fi';\nimport { FaCheck } from 'react-icons/fa';\nimport { handleSignup } from '../../database/functions';\n\nconst i18n = {\n  EN: {\n    brandTitle: 'TINH HOA VIỆT',\n    tagline: \"Where Vietnamese Excellence Meets Global Recognition\",\n    features: ['Premium Vietnamese Heritage', 'Global Excellence Standards', 'Elite Community Access'],\n    begin: 'Create Your Account',\n    sub: 'Join the platform that recognizes Vietnamese excellence',\n    fullName: 'Full Name',\n    email: 'Email Address',\n    password: 'Password',\n    confirmPassword: 'Confirm Password',\n    passwordHint: 'At least 8 characters with numbers and symbols',\n    terms1: 'I agree to the ',\n    tos: 'Terms of Service',\n    and: ' and ',\n    privacy: 'Privacy Policy',\n    submit: 'Create Account',\n    have: 'Already part of our community? ',\n    login: 'Sign In to Your Account',\n    langEN: 'EN',\n    langVN: 'VN',\n  },\n  VN: {\n    brandTitle: 'TINH HOA VIỆT',\n    tagline: 'Nơi tôn vinh tinh hoa Việt Nam vươn tầm quốc tế',\n    features: ['Di sản Việt Nam đẳng cấp', 'Chuẩn mực xuất sắc toàn cầu', 'Cộng đồng tinh hoa'],\n    begin: 'Tạo Tài Khoản',\n    sub: 'Tham gia nền tảng tôn vinh tinh hoa Việt',\n    fullName: 'Họ và Tên',\n    email: 'Địa chỉ Email',\n    password: 'Mật khẩu',\n    confirmPassword: 'Xác nhận mật khẩu',\n    passwordHint: 'Tối thiểu 8 ký tự, có số và ký hiệu',\n    terms1: 'Tôi đồng ý với ',\n    tos: 'Điều khoản Dịch vụ',\n    and: ' và ',\n    privacy: 'Chính sách Bảo mật',\n    submit: 'Tạo Tài Khoản Tinh Hoa',\n    have: 'Đã có tài khoản? ',\n    login: 'Đăng nhập tài khoản',\n    langEN: 'EN',\n    langVN: 'VN',\n  }\n};\n\nconst SignUpV2: React.FC = () => {\n  const [formData, setFormData] = useState({\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    agree: false\n  });\n  const [language, setLanguage] = useState<'EN' | 'VN'>('EN');\n  const [message, setMessage] = useState('');\n  const t = i18n[language];\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n  };\n\n  const onSuccess = () => {\n    setMessage('✅ Check your email for a verification link!');\n    setTimeout(() => navigate('/sign-up'), 2000);\n  };\n\n  const onFail = (err?: string) => {\n    setMessage('❌ ' + (err || 'Signup failed. Please try again.'));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!formData.agree) {\n      setMessage(language === 'EN'\n        ? '❌ You must agree to the Terms of Service'\n        : '❌ Bạn phải đồng ý với Điều khoản Dịch vụ');\n      return;\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      setMessage(language === 'EN' ? '❌ Passwords do not match' : '❌ Mật khẩu không khớp');\n      return;\n    }\n\n    if (formData.password.length < 8) {\n      setMessage(language === 'EN'\n        ? '❌ Password must be at least 8 characters'\n        : '❌ Mật khẩu phải có ít nhất 8 ký tự');\n      return;\n    }\n\n    handleSignup({\n        email: formData.email,\n        password: formData.password,\n        fullName: formData.fullName,\n        onSuccess,\n        onFail,\n    })\n  };\n\n  return (\n    <div className=\"auth-shell\">\n      {/* Left brand side */}\n      <aside className=\"brand-side\" aria-hidden>\n        <div className=\"brand-sheen\" />\n        <div className=\"brand-pattern\" />\n        <div className=\"brand-wrap\">\n          <h1 className=\"brand-name\">{t.brandTitle}</h1>\n          <p className=\"brand-tag\">{t.tagline}</p>\n          <ul className=\"brand-features\">\n            {t.features.map((f, i) => (\n              <li className=\"feature\" key={i}>\n                  <span className=\"tick\">✓</span><span>{f}</span>\n              </li>\n            ))}\n          </ul>\n      \n        </div>\n      </aside>\n\n      {/* Right form side */}\n      <main className=\"form-side\" role=\"main\">\n        <header className=\"form-top\">\n          <div className=\"lang-switch\" role=\"tablist\" aria-label=\"Language switcher\">\n            <button\n              role=\"tab\"\n              aria-selected={language === 'EN'}\n              className={`lang ${language === 'EN' ? 'active' : ''}`}\n              onClick={() => setLanguage('EN')}\n            >{t.langEN}</button>\n            <span className=\"mid\">|</span>\n            <button\n              role=\"tab\"\n              aria-selected={language === 'VN'}\n              className={`lang ${language === 'VN' ? 'active' : ''}`}\n              onClick={() => setLanguage('VN')}\n            >{t.langVN}</button>\n          </div>\n        </header>\n\n        <section className=\"form-wrap\">\n          <div className=\"intro\">\n            <h2 className=\"title\">{t.begin}</h2>\n            <p className=\"subtitle\">{t.sub}</p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"auth-form\" noValidate>\n            <div className=\"field\">\n              <label htmlFor=\"fullName\">{t.fullName} <span className=\"req\">*</span></label>\n              <input\n                type=\"text\"\n                id=\"fullName\"\n                name=\"fullName\"\n                value={formData.fullName}\n                onChange={handleChange}\n                placeholder={language === 'EN' ? 'Enter your full name' : 'Nhập họ và tên'}\n                required\n              />\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"email\">{t.email} <span className=\"req\">*</span></label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                placeholder={language === 'EN' ? 'your.email@example.com' : 'email@vi-du.com'}\n                required\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"field\">\n                <label htmlFor=\"password\">{t.password} <span className=\"req\">*</span></label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  placeholder={language === 'EN' ? 'Create a strong password' : 'Tạo mật khẩu mạnh'}\n                  required\n                  minLength={8}\n                />\n                <small className=\"hint\">{t.passwordHint}</small>\n              </div>\n\n              <div className=\"field\">\n                <label htmlFor=\"confirmPassword\">{t.confirmPassword} <span className=\"req\">*</span></label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  placeholder={language === 'EN' ? 'Re-enter your password' : 'Nhập lại mật khẩu'}\n                  required\n                  minLength={8}\n                />\n              </div>\n            </div>\n\n            <div className=\"terms\">\n              <input\n                type=\"checkbox\"\n                id=\"agree\"\n                name=\"agree\"\n                checked={formData.agree}\n                onChange={handleChange}\n                required\n              />\n              <label htmlFor=\"agree\">\n                {t.terms1}\n                <a href=\"#terms\">{t.tos}</a>\n                {t.and}\n                <a href=\"#privacy\">{t.privacy}</a>\n              </label>\n            </div>\n\n            <button type=\"submit\" className=\"cta\">\n              <span>{t.submit}</span>\n              <FiArrowRight className=\"arrow\" />\n            </button>\n\n            {message && (\n              <p style={{ textAlign: 'center', marginTop: 10, color: '#fff' }}>{message}</p>\n            )}\n\n            <p className=\"switch\">\n              {t.have}\n              <a href=\"/sign-in\">{t.login}</a>\n            </p>\n          </form>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default SignUpV2;\n","import React from 'react'\nimport Signupform from '../componets/sign-up/SignUpV2'\nconst Signup = () => {\n \n  return (\n    <main >\n      <Signupform/>\n    </main>\n  )\n}\n\nexport default Signup\n"],"names":["handleLogout","async","onSuccess","onFail","error","supabase","auth","signOut","handleSignup","email","password","fullName","data","signUp","options","full_name","signup_source","message","handleLogin","signInWithPassword","handleResetPassword","resetPasswordForEmail","handleUpdatePassword","newPassword","updateUser","i18n","EN","brandTitle","tagline","features","begin","sub","confirmPassword","passwordHint","terms1","tos","and","privacy","submit","have","login","langEN","langVN","VN","SignUpV2","formData","setFormData","useState","agree","language","setLanguage","setMessage","t","handleChange","e","name","value","type","checked","target","prev","setTimeout","navigate","err","React","className","map","f","i","key","role","onClick","onSubmit","preventDefault","length","noValidate","htmlFor","id","onChange","placeholder","required","minLength","href","FiArrowRight","style","textAlign","marginTop","color","Signup","Signupform"],"sourceRoot":""}