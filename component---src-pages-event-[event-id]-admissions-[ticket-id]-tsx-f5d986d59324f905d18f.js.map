{"version":3,"file":"component---src-pages-event-[event-id]-admissions-[ticket-id]-tsx-f5d986d59324f905d18f.js","mappings":"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","sources":["webpack:///./src/componets/shared/ProtectedRoute/ProtectedRoute.tsx","webpack:///./src/pages/event/[event-id]/admissions/[ticket-id].tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { supabase } from \"../../../database/supabaseClient\";\nimport \"./protected.css\";\n\nconst i18n = {\n  EN: {\n    brandTitle: \"TINH HOA VIỆT\",\n    tagline: \"Where Vietnamese Excellence Meets Global Recognition\",\n    loading: \"Checking authentication...\",\n    redirect: \"Redirecting...\",\n  },\n  VN: {\n    brandTitle: \"TINH HOA VIỆT\",\n    tagline: \"Nơi tôn vinh tinh hoa Việt Nam vươn tầm quốc tế\",\n    loading: \"Đang kiểm tra xác thực...\",\n    redirect: \"Đang chuyển hướng...\",\n  },\n};\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  redirectTo?: string;\n  language?: \"EN\" | \"VN\";\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  children,\n  redirectTo = \"/members/login\",\n  language = \"EN\",\n}) => {\n  const [session, setSession] = useState<any>(null);\n  const [status, setStatus] = useState(i18n[language].loading);\n  const [loading, setLoading] = useState(true);\n\n  const t = i18n[language];\n\n  useEffect(() => {\n    const checkSession = async () => {\n      const { data, error } = await supabase.auth.getSession();\n\n      if (error) {\n        console.error(\"Session error:\", error);\n        setStatus(\"⚠️ Error checking session.\");\n        setLoading(false);\n        return;\n      }\n\n      if (!data.session) {\n        setStatus(\"❌ You must be logged in to view this page.\");\n        setTimeout(() => navigate(redirectTo), 1800);\n      } else {\n        setSession(data.session);\n        setStatus(\"✅ Access granted!\");\n      }\n\n      setLoading(false);\n    };\n\n    checkSession();\n\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      if (!session) {\n        setStatus(t.redirect);\n        setTimeout(() => navigate(redirectTo), 1500);\n      }\n    });\n\n    return () => {\n      listener.subscription.unsubscribe();\n    };\n  }, [redirectTo, t.redirect]);\n\n  if (loading || !session) {\n    return (\n      <div className=\"auth-shell\">\n        <aside className=\"brand-side\" aria-hidden>\n          <div className=\"brand-sheen\" />\n          <div className=\"brand-pattern\" />\n          <div className=\"brand-wrap\">\n            <h1 className=\"brand-name\">{t.brandTitle}</h1>\n            <p className=\"brand-tag\">{t.tagline}</p>\n          </div>\n        </aside>\n\n        <main className=\"form-side\">\n          <div className=\"loading-block\">\n            <div className=\"spinner\" />\n            <p className=\"loading-text\">{status}</p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n","// src/pages/event/[event-id]/admissions/[ticket-id].tsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport \"../../../../componets/log-in/login.css\";\nimport { FiArrowRight, FiCheckCircle } from \"react-icons/fi\";\nimport { useLocation } from \"@reach/router\";\nimport { supabase } from \"../../../../database/supabaseClient\";\nimport ProtectedRoute from \"../../../../componets/shared/ProtectedRoute/ProtectedRoute\";\n\n\nconst IS_DEBUG : any = false;\nconst Debug = ({children}:any) => {\n  if(IS_DEBUG) return children;\n  else return <></>\n}\n\nconst i18n = {\n  EN: {\n    brandTitle: \"TINH HOA VIỆT\",\n    tagline: \"Where Vietnamese Excellence Meets Global Recognition\",\n    features: [\n      \"Exclusive Gala Event\",\n      \"Cultural Performances\",\n      \"Networking with Honorees\",\n    ],\n    title: \"Event Admission\",\n    subtitle: \"Validate and admit a ticket for entry\",\n    admitBtn: \"Admit User\",\n    loading: \"Processing...\",\n    success: \"Admission Successful!\",\n    langEN: \"EN\",\n    langVN: \"VN\",\n  },\n  VN: {\n    brandTitle: \"TINH HOA VIỆT\",\n    tagline: \"Nơi tôn vinh tinh hoa Việt Nam vươn tầm quốc tế\",\n    features: [\n      \"Sự kiện Gala độc quyền\",\n      \"Biểu diễn văn hóa\",\n      \"Kết nối cùng các tinh hoa\",\n    ],\n    title: \"Xác Nhận Vé Sự Kiện\",\n    subtitle: \"Kiểm tra và xác nhận vé hợp lệ để vào cửa\",\n    admitBtn: \"Xác nhận vào cửa\",\n    loading: \"Đang xử lý...\",\n    success: \"Xác nhận thành công!\",\n    langEN: \"EN\",\n    langVN: \"VN\",\n  },\n};\n\nconst Admissions: React.FC = () => {\n  const location = useLocation();\n  const [language, setLanguage] = useState<\"EN\" | \"VN\">(\"EN\");\n  const t = i18n[language];\n\n  // Extract event + ticket IDs\n  const { eventId, ticketId } = useMemo(() => {\n    const parts = (location?.pathname || \"\").replace(/\\/+$/, \"\").split(\"/\");\n    return { eventId: parts[2], ticketId: parts[4] };\n  }, [location?.pathname]);\n\n  const [ticket, setTicket] = useState<any>(null);\n  const [state, setState] = useState<\n    \"scanner\" | \"fail\" | \"used\" | \"valid\" | \"success\"\n  >(\"scanner\");\n  const [loading, setLoading] = useState(false);\n  const [debug, setDebug] = useState<string[]>([]);\n\n  const log = (msg: string) => {\n    console.log(msg);\n    setDebug((prev) => [...prev, `[${new Date().toLocaleTimeString()}] ${msg}`]);\n  };\n\n  // === Fetch ticket ===\n  useEffect(() => {\n    const fetchTicket = async () => {\n      if (!eventId || !ticketId) {\n        log(\"⏳ Waiting for URL parameters...\");\n        return;\n      }\n\n      setLoading(true);\n      log(`📡 Fetching ticket: event_id='${eventId}', user_id='${ticketId}'`);\n\n      const { data, error } = await supabase\n        .from(\"events\")\n        .select(\"*\")\n        .eq(\"event_id\", eventId)\n        .eq(\"user_id\", ticketId)\n        .maybeSingle();\n\n      if (error) {\n        log(`💥 Supabase error: ${error.message}`);\n        setState(\"fail\");\n      } else if (!data) {\n        log(\"🚫 No matching record found.\");\n        setState(\"fail\");\n      } else {\n        log(`✅ Ticket loaded: ${JSON.stringify(data, null, 2)}`);\n        setTicket(data);\n        setState(data.is_used ? \"used\" : \"valid\");\n      }\n      setLoading(false);\n    };\n    fetchTicket();\n  }, [eventId, ticketId]);\n\n  // === Admit action ===\n  const handleAdmit = async () => {\n    if (!ticket) {\n      log(\"❌ No ticket loaded to admit\");\n      return;\n    }\n\n    setLoading(true);\n    const timestamp = new Date().toISOString();\n    log(`🕓 Attempting update with used='${timestamp}'`);\n\n    // ✅ FIX: do not send `is_used` (generated column)\n    const updatePayload = { used: timestamp };\n\n    const { data, error } = await supabase\n      .from(\"events\")\n      .update(updatePayload)\n      .eq(\"user_id\", ticket.user_id)\n      .eq(\"event_id\", ticket.event_id)\n      .select()\n      .maybeSingle();\n\n    if (error) {\n      log(`💥 Update failed: ${error.message}`);\n      alert(\"Update failed: \" + error.message);\n    } else if (!data) {\n      log(\"⚠️ No data returned (possible RLS issue)\");\n      alert(\"No data returned — may be blocked by RLS\");\n    } else {\n      log(\"✅ Ticket admitted successfully\");\n      setTicket(data);\n      setState(\"success\");\n    }\n    setLoading(false);\n  };\n\n  // === Render Admission state ===\n  const renderState = () => {\n    switch (state) {\n      case \"scanner\":\n        return (\n          <>\n            <div className=\"spinner\" />\n            <h3 className=\"admission-state-title\">Waiting for QR Code…</h3>\n            <p className=\"admission-desc\">Point the scanner at a ticket QR.</p>\n          </>\n        );\n      case \"fail\":\n        return (\n          <>\n            <div className=\"admission-emoji\">❌</div>\n            <h3 className=\"admission-state-title\">Ticket Not Found</h3>\n            <p className=\"admission-desc\">\n              This QR code does not match any ticket.\n            </p>\n          </>\n        );\n      case \"used\":\n        return (\n          <>\n            <div className=\"admission-emoji\">⚠️</div>\n            <h3 className=\"admission-state-title\">Already Used</h3>\n            <p className=\"admission-desc\">\n              This ticket has already been admitted.\n            </p>\n          </>\n        );\n      case \"valid\":\n        return (\n          <>\n            <div className=\"admission-emoji\">✅</div>\n            <h3 className=\"admission-state-title\">Valid Ticket</h3>\n            <p className=\"admission-desc\">Ticket is valid and unused.</p>\n            <button\n              className=\"cta\"\n              onClick={handleAdmit}\n              disabled={loading}\n              style={{ marginTop: 10 }}\n            >\n              {loading ? t.loading : t.admitBtn}\n              {!loading && <FiArrowRight className=\"arrow\" />}\n            </button>\n          </>\n        );\n      case \"success\":\n        return (\n          <>\n            <div className=\"admission-emoji\">🎉</div>\n            <h3 className=\"admission-state-title\">{t.success}</h3>\n            <p className=\"admission-desc\">Welcome to the event!</p>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                gap: 6,\n                color: \"var(--gold-2)\",\n              }}\n            >\n              <FiCheckCircle size={22} />\n              <span>Admission Complete</span>\n            </div>\n          </>\n        );\n    }\n  };\n\n  return (\n    <ProtectedRoute>\n      <div className=\"auth-shell\">\n        {/* === LEFT PANEL === */}\n        <aside className=\"brand-side\">\n          <div className=\"brand-sheen\" />\n          <div className=\"brand-pattern\" />\n          <div className=\"brand-wrap\">\n            <h1 className=\"brand-name\">{t.brandTitle}</h1>\n            <p className=\"brand-tag\">{t.tagline}</p>\n            <ul className=\"brand-features\">\n              {t.features.map((f, i) => (\n                <li key={i} className=\"feature\">\n                  <span className=\"tick\">✓</span>\n                  <span>{f}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </aside>\n\n        {/* === RIGHT PANEL === */}\n        <main className=\"form-side\">\n          <header className=\"form-top\">\n            <div className=\"lang-switch\">\n              <button\n                className={`lang ${language === \"EN\" ? \"active\" : \"\"}`}\n                onClick={() => setLanguage(\"EN\")}\n              >\n                {t.langEN}\n              </button>\n              <span className=\"mid\">|</span>\n              <button\n                className={`lang ${language === \"VN\" ? \"active\" : \"\"}`}\n                onClick={() => setLanguage(\"VN\")}\n              >\n                {t.langVN}\n              </button>\n            </div>\n          </header>\n\n          <section className=\"form-wrap\" style={{ color: \"var(--ink)\" }}>\n            <div className=\"intro\">\n              <h2 className=\"title\">{t.title}</h2>\n              <p className=\"subtitle\">{t.subtitle}</p>\n            </div>\n\n            <div\n              className=\"auth-form\"\n              style={{\n                textAlign: \"center\",\n                color: \"var(--ink)\",\n                minHeight: 300,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                gap: 12,\n              }}\n            >\n              {renderState()}\n            </div>\n\n            {/* Debug log */}\n            <Debug>\n              <div\n                style={{\n                  background: \"#000\",\n                  color: \"#0f0\",\n                  padding: 10,\n                  marginTop: 20,\n                  borderRadius: 6,\n                  fontSize: 11,\n                  textAlign: \"left\",\n                  maxHeight: 200,\n                  overflowY: \"auto\",\n                }}\n              >\n                <strong>🧠 Debug Log:</strong>\n                <pre>{debug.join(\"\\n\")}</pre>\n              </div>\n            </Debug>\n          </section>\n        </main>\n\n        {/* Spinner CSS */}\n        <style>{`\n          @keyframes spin { to { transform: rotate(360deg); } }\n          .spinner {\n            width: 28px; height: 28px;\n            border: 3px solid var(--gold-2);\n            border-top-color: transparent;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            margin: 0 auto 10px;\n          }\n        `}</style>\n      </div>\n    </ProtectedRoute>\n  );\n};\n\nexport default Admissions;\n"],"names":["i18n","EN","brandTitle","tagline","loading","redirect","VN","_ref","children","redirectTo","language","session","setSession","useState","status","setStatus","setLoading","t","useEffect","async","data","error","supabase","auth","getSession","console","setTimeout","navigate","checkSession","listener","onAuthStateChange","_event","subscription","unsubscribe","React","className","Debug","features","title","subtitle","admitBtn","success","langEN","langVN","Admissions","location","useLocation","setLanguage","eventId","ticketId","useMemo","parts","pathname","replace","split","ticket","setTicket","state","setState","debug","setDebug","log","msg","prev","Date","toLocaleTimeString","from","select","eq","maybeSingle","message","JSON","stringify","is_used","fetchTicket","handleAdmit","timestamp","toISOString","updatePayload","used","update","user_id","event_id","alert","ProtectedRoute","map","f","i","key","onClick","style","color","textAlign","minHeight","display","flexDirection","alignItems","justifyContent","gap","renderState","disabled","marginTop","FiArrowRight","FiCheckCircle","size","background","padding","borderRadius","fontSize","maxHeight","overflowY","join"],"sourceRoot":""}