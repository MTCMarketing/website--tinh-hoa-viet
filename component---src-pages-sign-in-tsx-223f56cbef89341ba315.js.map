{"version":3,"file":"component---src-pages-sign-in-tsx-223f56cbef89341ba315.js","mappings":"wOAGO,MAAMA,EAAeC,eAAA,GAEtB,IADJ,UAAEC,EAAS,OAAEC,QAAyD,MAAG,CAAC,EAAC,EAE3E,MAAM,MAAEC,SAAgBC,EAAAA,GAASC,KAAKC,UAClCH,EAAOD,SAAAA,IACND,SAAAA,GACP,EAEaM,EAAeP,UAYrB,IAZ4B,MACjCQ,EAAK,SACLC,EAAQ,SACRC,EAAQ,UACRT,EAAS,OACTC,GAOD,EACC,MAAM,KAAES,EAAI,MAAER,SAAgBC,EAAAA,GAASC,KAAKO,OAAO,CACjDJ,QACAC,WACAI,QAAS,CACPF,KAAM,CACJG,UAAWJ,GAAY,UACvBK,cAAe,cAKjBZ,EAAOD,SAAAA,EAASC,EAAMa,SACrBf,SAAAA,KAIMgB,EAAcjB,UAOrB,IANJ,MAAEQ,EAAK,SAAEC,EAAQ,UAAER,EAAS,OAAEC,GAK7B,EAED,MAAM,KAAES,EAAI,MAAER,SAAgBC,EAAAA,GAASC,KAAKa,mBAAmB,CAAEV,QAAOC,aACpEN,EAAOD,SAAAA,EAASC,EAAMa,SACrBf,SAAAA,KAGMkB,EAAsBnB,UAM7B,IALJ,MAAEQ,EAAK,UAAEP,EAAS,OAAEC,GAInB,EAED,MAAM,KAAES,EAAI,MAAER,SAAgBC,EAAAA,GAASC,KAAKe,sBAAsBZ,GAC9DL,EAAOD,SAAAA,EAASC,EAAMa,SACrBf,SAAAA,KAGMoB,EAAuBrB,UAM9B,IALJ,YAAEsB,EAAW,UAAErB,EAAS,OAAEC,GAIzB,EAED,MAAM,KAAES,EAAI,MAAER,SAAgBC,EAAAA,GAASC,KAAKkB,WAAW,CAAEd,SAAUa,IAC/DnB,EAAOD,SAAAA,EAASC,EAAMa,SACrBf,SAAAA,I,sHCnEP,MAAMuB,EAAO,CACXC,GAAI,CACFC,WAAY,gBACZC,QAAS,uDACTC,SAAU,CAAC,8BAA+B,8BAA+B,0BACzEC,MAAO,eACPC,SAAU,gDACVtB,MAAO,gBACPC,SAAU,WACVsB,SAAU,cACVC,OAAQ,mBACRC,OAAQ,UACRC,UAAW,0BACXC,OAAQ,iBACRC,OAAQ,KACRC,OAAQ,MAEVC,GAAI,CACFZ,WAAY,gBACZC,QAAS,kDACTC,SAAU,CAAC,2BAA4B,8BAA+B,sBACtEC,MAAO,oBACPC,SAAU,4CACVtB,MAAO,gBACPC,SAAU,WACVsB,SAAU,oBACVC,OAAQ,iBACRC,OAAQ,YACRC,UAAW,sBACXC,OAAQ,qBACRC,OAAQ,KACRC,OAAQ,OAwIZ,MApIwBE,KACtB,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,CAAElC,MAAO,GAAIC,SAAU,GAAIsB,UAAU,KACxE,EAACY,EAAS,EAACC,IAAeF,EAAAA,EAAAA,UAAsB,OAChD,EAAC1B,EAAQ,EAAC6B,IAAcH,EAAAA,EAAAA,UAAS,IACjCI,EAAItB,EAAKmB,IAEfI,EAAAA,EAAAA,WAAU,KACR3C,EAAAA,GAASC,KAAK2C,aAAaC,KAAKC,IAAe,IAAd,KAAEvC,GAAM,EACnCA,EAAKwC,UAASC,EAAAA,EAAAA,UAAS,yBAE5B,IAEH,MAAMnD,EAAYA,KAChB4C,EAAW,sCACXQ,WAAW,KAAMD,EAAAA,EAAAA,UAAS,sBAAuB,MAG7ClD,EAAUoD,IACdT,EAAW,MAAQS,GAAO,0BAGtBC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,QAAEC,GAAYJ,EAAEK,OACzCpB,EAAYqB,GAAI,iBAAUA,EAAK,CAAC,CAACL,GAAgB,aAATE,EAAsBC,EAAUF,MAa1E,OACEK,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAAAA,QAAAA,CAAOC,UAAU,aAAa,kBAC5BD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cAAclB,EAAEpB,YAC9BqC,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,aAAalB,EAAEnB,SAC5BoC,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,kBACXlB,EAAElB,SAASqC,IAAI,CAACC,EAAGC,IAClBJ,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,UAAUI,IAAKD,GAC3BJ,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,QAAO,KAAQ,4BAAOE,QAOhDH,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,aACdD,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,YAChBD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eACbD,EAAAA,cAAAA,SAAAA,CACEC,UAAS,SAAuB,OAAbrB,EAAoB,SAAW,IAClD0B,QAASA,IAAMzB,EAAY,OAC3BE,EAAEV,QACJ2B,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,OAAM,KACtBD,EAAAA,cAAAA,SAAAA,CACEC,UAAS,SAAuB,OAAbrB,EAAoB,SAAW,IAClD0B,QAASA,IAAMzB,EAAY,OAC3BE,EAAET,UAIR0B,EAAAA,cAAAA,UAAAA,CAASC,UAAU,aACjBD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,SACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,SAASlB,EAAEjB,OACzBkC,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,YAAYlB,EAAEhB,WAG7BiC,EAAAA,cAAAA,OAAAA,CAAMO,SAjDQd,IACpBA,EAAEe,kBACFtD,EAAAA,EAAAA,IAAY,CACVT,MAAOgC,EAAShC,MAChBC,SAAU+B,EAAS/B,SACnBR,YACAC,YA2CkC8D,UAAU,aACtCD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,SACbD,EAAAA,cAAAA,QAAAA,CAAOS,QAAQ,SAAS1B,EAAEtC,OAC1BuD,EAAAA,cAAAA,QAAAA,CACEJ,KAAK,QACLc,GAAG,QACHhB,KAAK,QACLC,MAAOlB,EAAShC,MAChBkE,SAAUnB,EACVoB,YAA0B,OAAbhC,EAAoB,yBAA2B,kBAC5DiC,UAAQ,KAIZb,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,SACbD,EAAAA,cAAAA,QAAAA,CAAOS,QAAQ,YAAY1B,EAAErC,UAC7BsD,EAAAA,cAAAA,QAAAA,CACEJ,KAAK,WACLc,GAAG,WACHhB,KAAK,WACLC,MAAOlB,EAAS/B,SAChBiE,SAAUnB,EACVoB,YAA0B,OAAbhC,EAAoB,sBAAwB,gBACzDiC,UAAQ,KAIZb,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACbD,EAAAA,cAAAA,QAAAA,CAAOC,UAAU,YACfD,EAAAA,cAAAA,QAAAA,CACEJ,KAAK,WACLF,KAAK,WACLG,QAASpB,EAAST,SAClB2C,SAAUnB,IAEXT,EAAEf,UAELgC,EAAAA,cAAAA,IAAAA,CAAGc,KAAK,kBAAkBb,UAAU,UAAUlB,EAAEd,SAGlD+B,EAAAA,cAAAA,SAAAA,CAAQJ,KAAK,SAASK,UAAU,OAC9BD,EAAAA,cAAAA,OAAAA,KAAOjB,EAAEb,QACT8B,EAAAA,cAACe,EAAAA,IAAY,CAACd,UAAU,WAGzBhD,GACC+C,EAAAA,cAAAA,IAAAA,CAAGgB,MAAO,CAAEC,UAAW,SAAUC,UAAW,GAAIC,MAAO,SAAWlE,GAGpE+C,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,UAAUlB,EAAEZ,UAAU6B,EAAAA,cAAAA,IAAAA,CAAGc,KAAK,YAAY/B,EAAEX,cC3JrE,MARcgD,IAEVpB,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACxB,EAAK,M","sources":["webpack:///./src/database/functions.ts","webpack:///./src/componets/log-in/login.tsx","webpack:///./src/pages/sign-in.tsx"],"sourcesContent":["import { supabase } from \"./supabaseClient\";\n\n\nexport const handleLogout = async (\n  { onSuccess, onFail }: { onSuccess?: () => void; onFail?: () => void } = {}\n) => {\n  const { error } = await supabase.auth.signOut()\n  if (error) onFail?.()\n  else onSuccess?.()\n}\n\nexport const handleSignup = async ({\n  email,\n  password,\n  fullName,\n  onSuccess,\n  onFail,\n}: {\n  email: string\n  password: string\n  fullName?: string\n  onSuccess?: () => void\n  onFail?: (error?: string) => void\n}) => {\n  const { data, error } = await supabase.auth.signUp({\n    email,\n    password,\n    options: {\n      data: {\n        full_name: fullName || \"unknown\",\n        signup_source: \"thv-web\", // optional\n      },\n    },\n  })\n\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\n\nexport const handleLogin = async (\n  { email, password, onSuccess, onFail }: {\n    email: string\n    password: string\n    onSuccess?: () => void\n    onFail?: (error?: string) => void\n  }\n) => {\n  const { data, error } = await supabase.auth.signInWithPassword({ email, password })\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\nexport const handleResetPassword = async (\n  { email, onSuccess, onFail }: {\n    email: string\n    onSuccess?: () => void\n    onFail?: (error?: string) => void\n  }\n) => {\n  const { data, error } = await supabase.auth.resetPasswordForEmail(email)\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\nexport const handleUpdatePassword = async (\n  { newPassword, onSuccess, onFail }: {\n    newPassword: string\n    onSuccess?: () => void\n    onFail?: (error?: string) => void\n  }\n) => {\n  const { data, error } = await supabase.auth.updateUser({ password: newPassword })\n  if (error) onFail?.(error.message)\n  else onSuccess?.()\n}\n\n\n\nexport interface UpdateUserData {\n  fullName?: string;\n  phone?: string;\n  email?: string;\n  dob?: string;\n  address?: string;\n  hometown?: string;\n  field?: string;\n  goals?: string;\n  vision?: string;\n  status?: string;\n  avatar?: string;\n}\n\n/**\n * Updates user profile data across both tables: user_member & user_private\n * Automatically maps field names to Supabase column names.\n */\nexport const updateUserProfile = async (updates: UpdateUserData) => {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) throw new Error('Not logged in');\n\n    const memberPayload: any = {};\n    const privatePayload: any = {};\n\n    if (updates.fullName) memberPayload.full_name = updates.fullName;\n    if (updates.hometown) memberPayload.hometown = updates.hometown;\n    if (updates.field) memberPayload.field_of_expertise = updates.field;\n    if (updates.status) memberPayload.profile_status = updates.status;\n    if (updates.avatar) memberPayload.avatar_url = updates.avatar;\n\n    if (updates.phone) privatePayload.phone = updates.phone;\n    if (updates.email) privatePayload.email = updates.email;\n    if (updates.address) privatePayload.address = updates.address;\n    if (updates.dob) privatePayload.dob = updates.dob;\n    if (updates.goals) privatePayload.personal_goals = updates.goals;\n    if (updates.vision) privatePayload.future_vision = updates.vision;\n\n    // Run updates separately depending on which data is provided\n    if (Object.keys(memberPayload).length > 0)\n      await supabase.from('user_member').update(memberPayload).eq('id', user.id);\n\n    if (Object.keys(privatePayload).length > 0)\n      await supabase.from('user_private').update(privatePayload).eq('id', user.id);\n\n    return { success: true };\n  } catch (error) {\n    console.error('Update user profile failed:', error);\n    return { success: false, error };\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { navigate } from 'gatsby';\nimport './login.css';\nimport { FiArrowRight } from 'react-icons/fi';\nimport { supabase } from '../../database/supabaseClient';\nimport { handleLogin } from '../../database/functions';\n\nconst i18n = {\n  EN: {\n    brandTitle: 'TINH HOA VIỆT',\n    tagline: \"Where Vietnamese Excellence Meets Global Recognition\",\n    features: ['Premium Vietnamese Heritage', 'Global Excellence Standards', 'Elite Community Access'],\n    title: 'Welcome Back',\n    subtitle: 'Log in to continue your journey of excellence',\n    email: 'Email Address',\n    password: 'Password',\n    remember: 'Remember Me',\n    forgot: 'Forgot Password?',\n    submit: 'Sign In',\n    noAccount: \"Don't have an account? \",\n    signup: 'Create One Now',\n    langEN: 'EN',\n    langVN: 'VN'\n  },\n  VN: {\n    brandTitle: 'TINH HOA VIỆT',\n    tagline: 'Nơi tôn vinh tinh hoa Việt Nam vươn tầm quốc tế',\n    features: ['Di sản Việt Nam đẳng cấp', 'Chuẩn mực xuất sắc toàn cầu', 'Cộng đồng tinh hoa'],\n    title: 'Chào mừng trở lại',\n    subtitle: 'Đăng nhập để tiếp tục hành trình tinh hoa',\n    email: 'Địa chỉ Email',\n    password: 'Mật khẩu',\n    remember: 'Ghi nhớ đăng nhập',\n    forgot: 'Quên mật khẩu?',\n    submit: 'Đăng Nhập',\n    noAccount: 'Chưa có tài khoản? ',\n    signup: 'Tạo tài khoản ngay',\n    langEN: 'EN',\n    langVN: 'VN'\n  }\n};\n\nconst Login: React.FC = () => {\n  const [formData, setFormData] = useState({ email: '', password: '', remember: false });\n  const [language, setLanguage] = useState<'EN' | 'VN'>('EN');\n  const [message, setMessage] = useState('');\n  const t = i18n[language];\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data }) => {\n      if (data.session) navigate('/members/dashboard');\n    });\n  }, []);\n\n  const onSuccess = () => {\n    setMessage('✅ Login successful! Redirecting...');\n    setTimeout(() => navigate('/members/dashboard'), 1000);\n  };\n\n  const onFail = (err?: string) => {\n    setMessage('❌ ' + (err || 'Invalid credentials.'));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    handleLogin({ \n      email: formData.email, \n      password: formData.password, \n      onSuccess, \n      onFail \n    });\n  };\n\n  return (\n    <div className=\"auth-shell\">\n      <aside className=\"brand-side\" aria-hidden>\n        <div className=\"brand-sheen\" />\n        <div className=\"brand-pattern\" />\n        <div className=\"brand-wrap\">\n          <h1 className=\"brand-name\">{t.brandTitle}</h1>\n          <p className=\"brand-tag\">{t.tagline}</p>\n          <ul className=\"brand-features\">\n            {t.features.map((f, i) => (\n              <li className=\"feature\" key={i}>\n                <span className=\"tick\">✓</span><span>{f}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </aside>\n\n      <main className=\"form-side\">\n        <header className=\"form-top\">\n          <div className=\"lang-switch\">\n            <button\n              className={`lang ${language === 'EN' ? 'active' : ''}`}\n              onClick={() => setLanguage('EN')}\n            >{t.langEN}</button>\n            <span className=\"mid\">|</span>\n            <button\n              className={`lang ${language === 'VN' ? 'active' : ''}`}\n              onClick={() => setLanguage('VN')}\n            >{t.langVN}</button>\n          </div>\n        </header>\n\n        <section className=\"form-wrap\">\n          <div className=\"intro\">\n            <h2 className=\"title\">{t.title}</h2>\n            <p className=\"subtitle\">{t.subtitle}</p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"auth-form\">\n            <div className=\"field\">\n              <label htmlFor=\"email\">{t.email}</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                placeholder={language === 'EN' ? 'your.email@example.com' : 'email@vi-du.com'}\n                required\n              />\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"password\">{t.password}</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                placeholder={language === 'EN' ? 'Enter your password' : 'Nhập mật khẩu'}\n                required\n              />\n            </div>\n\n            <div className=\"options\">\n              <label className=\"remember\">\n                <input \n                  type=\"checkbox\" \n                  name=\"remember\" \n                  checked={formData.remember} \n                  onChange={handleChange} \n                />\n                {t.remember}\n              </label>\n              <a href=\"/reset-password\" className=\"forgot\">{t.forgot}</a>\n            </div>\n\n            <button type=\"submit\" className=\"cta\">\n              <span>{t.submit}</span>\n              <FiArrowRight className='arrow'/>\n            </button>\n\n            {message && (\n              <p style={{ textAlign: 'center', marginTop: 10, color: '#fff' }}>{message}</p>\n            )}\n\n            <p className=\"switch\">{t.noAccount}<a href=\"/sign-up\">{t.signup}</a></p>\n          </form>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react'\nimport Login from '../componets/log-in/login'\n\nconst Signin= () => {\n  return (\n    <div>\n      <Login/>\n    </div>\n  )\n}\n\nexport default Signin\n"],"names":["handleLogout","async","onSuccess","onFail","error","supabase","auth","signOut","handleSignup","email","password","fullName","data","signUp","options","full_name","signup_source","message","handleLogin","signInWithPassword","handleResetPassword","resetPasswordForEmail","handleUpdatePassword","newPassword","updateUser","i18n","EN","brandTitle","tagline","features","title","subtitle","remember","forgot","submit","noAccount","signup","langEN","langVN","VN","Login","formData","setFormData","useState","language","setLanguage","setMessage","t","useEffect","getSession","then","_ref","session","navigate","setTimeout","err","handleChange","e","name","value","type","checked","target","prev","React","className","map","f","i","key","onClick","onSubmit","preventDefault","htmlFor","id","onChange","placeholder","required","href","FiArrowRight","style","textAlign","marginTop","color","Signin"],"sourceRoot":""}