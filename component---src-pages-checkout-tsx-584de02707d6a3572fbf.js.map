{"version":3,"file":"component---src-pages-checkout-tsx-584de02707d6a3572fbf.js","mappings":"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","sources":["webpack:///./src/componets/shared/Ecommerce/QRCodeCheckout/QRCodeCheckout.tsx","webpack:///./src/pages/checkout.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { FiArrowRight, FiCheckCircle } from 'react-icons/fi';\n\nimport { QRCodeCanvas } from 'qrcode.react'; // ✅ Lightweight QR library\nimport { supabase } from '../../../../database/supabaseClient';\n\n\nconst i18n = {\n  EN: {\n    brandTitle: 'TINH HOA VIỆT',\n    tagline: 'Where Vietnamese Excellence Meets Global Recognition',\n    features: ['Exclusive Gala Event', 'Cultural Performances', 'Networking with Honorees'],\n    title: 'Event Ticket Payment',\n    subtitle: 'Complete your payment to confirm your attendance',\n    eventName: 'Vietnamese Excellence Gala 2025',\n    date: 'December 10, 2025 – 7:00 PM',\n    location: 'Saigon Opera House, Ho Chi Minh City',\n    price: 'Ticket Price: 500,000₫',\n    payBtn: 'Pay Now',\n    loading: 'Processing payment...',\n    success: 'Payment Confirmed! Thank you.',\n    testBtn: 'Test Pay',\n    langEN: 'EN',\n    langVN: 'VN'\n  },\n  VN: {\n    brandTitle: 'TINH HOA VIỆT',\n    tagline: 'Nơi tôn vinh tinh hoa Việt Nam vươn tầm quốc tế',\n    features: ['Sự kiện Gala độc quyền', 'Biểu diễn văn hóa', 'Kết nối cùng các tinh hoa'],\n    title: 'Thanh Toán Vé Sự Kiện',\n    subtitle: 'Hoàn tất thanh toán để xác nhận tham dự',\n    eventName: 'Gala Tinh Hoa Việt 2025',\n    date: '10/12/2025 – 19:00',\n    location: 'Nhà hát Thành phố, TP. Hồ Chí Minh',\n    price: 'Giá vé: 500,000₫',\n    payBtn: 'Thanh toán ngay',\n    loading: 'Đang xử lý thanh toán...',\n    success: 'Thanh toán thành công! Cảm ơn bạn.',\n    testBtn: 'Kiểm tra thanh toán (Portal)',\n    langEN: 'EN',\n    langVN: 'VN'\n  }\n};\n\nconst EventPayment: React.FC = () => {\n  const [language, setLanguage] = useState<'EN' | 'VN'>('EN');\n  const [loading, setLoading] = useState(false);\n  const [isPaid, setIsPaid] = useState(false);\n  const [user, setUser] = useState<any>(null);\n  const [qrData, setQrData] = useState<any>(null);\n  const [transactionId, setTransactionId] = useState<string | null>(null);\n  const [testLoading, setTestLoading] = useState(false);\n  const t = i18n[language];\n\n  // ✅ Load logged-in user\n  useEffect(() => {\n    supabase.auth.getUser().then(({ data }) => {\n      if (data?.user) {\n        setUser(data.user);\n        console.log(`✅ Logged in as ${data.user.email} (${data.user.id})`);\n      } else {\n        console.log('❌ No user logged in');\n      }\n    });\n  }, []);\n\n  // 👂 Watch for live VietQR callback updates\n  useEffect(() => {\n    if (!user) return;\n\n    console.log('👂 Setting up realtime listener for VietQR callbacks...');\n    const channel = supabase\n      .channel('public:messages')\n      .on(\n        'postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'messages' },\n        (payload) => {\n          try {\n            const { event_type, payload: eventPayload } = payload.new;\n            if (event_type === 'vietqr_callback') {\n              const orderId = eventPayload?.orderId ?? '';\n              console.log('🔍 Checking callback...');\n              console.log('➡️ orderId:', orderId);\n              console.log('➡️ current user:', user.id);\n\n              if (!orderId) {\n                console.warn('⚠️ Missing orderId; ignoring.');\n                return;\n              }\n\n              if (orderId !== user.id) {\n                console.warn('⚠️ orderId does not match current user.');\n                return;\n              }\n\n              console.log('✅ Matched callback for current user!');\n              console.log('📦 Payload:', JSON.stringify(eventPayload, null, 2));\n\n              // Mark payment as confirmed\n              setIsPaid(true);\n              setQrData(null); // Hide QR + buttons\n              setTransactionId(eventPayload.transactionid || null);\n            }\n          } catch (err) {\n            console.error('⚠️ Error parsing payload:', err);\n          }\n        }\n      )\n      .subscribe((status) => console.log(`📡 Channel status: ${status}`));\n\n    return () => {\n      console.log('🧹 Unsubscribing from realtime listener...');\n      supabase.removeChannel(channel);\n    };\n  }, [user]);\n\n  // === Create VietQR Payment Intent ===\n  const handlePayment = async () => {\n    if (!user) {\n      alert('Please log in first.');\n      return;\n    }\n\n    const endpoint = 'https://integrations.tinhhoaviet.org.vn/vietqr/payment-intent';\n    try {\n      setLoading(true);\n      console.log('💳 Initiating payment for user:', user.id);\n\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ user_id: user.id }),\n      });\n\n      if (!res.ok) throw new Error('Payment request failed.');\n      const data = await res.json();\n\n      console.log('💳 VietQR API Response:', data);\n\n      if (data.qrLink || data.qrDataURL || data.qrCode) {\n        setQrData(data);\n      } else {\n        alert('Payment QR/link not received.');\n      }\n    } catch (err) {\n      console.error('❌ Payment Error:', err);\n      alert('An error occurred while initiating payment.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // === Test Payment Simulation ===\n  const handleTestPayment = async () => {\n    if (!qrData) {\n      alert('No QR data available.');\n      return;\n    }\n\n    const payload2 = {\n      bankAccount: qrData.bankAccount || '0369053640',\n      content: qrData.content || 'TestPayment',\n      amount: qrData.amount || 150000,\n      bankCode: qrData.bankCode || 'MB',\n      transType: 'C',\n    };\n\n    console.log('🧾 Sending payload2:', payload2);\n    setTestLoading(true);\n\n    try {\n      const res = await fetch('https://integrations.tinhhoaviet.org.vn/vietqr/test-success', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload2),\n      });\n\n      const result = await res.text();\n      console.log('✅ Response from test-success:', result);\n    } catch (err) {\n      console.error('❌ Failed to post to /vietqr/test-success:', err);\n    } finally {\n      setTestLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-shell\">\n      <aside className=\"brand-side\">\n        <div className=\"brand-sheen\" />\n        <div className=\"brand-pattern\" />\n        <div className=\"brand-wrap\">\n          <h1 className=\"brand-name\">{t.brandTitle}</h1>\n          <p className=\"brand-tag\">{t.tagline}</p>\n          <ul className=\"brand-features\">\n            {t.features.map((f, i) => (\n              <li key={i} className=\"feature\">\n                <span className=\"tick\">✓</span><span>{f}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </aside>\n\n      <main className=\"form-side\">\n        <header className=\"form-top\">\n          <div className=\"lang-switch\">\n            <button\n              className={`lang ${language === 'EN' ? 'active' : ''}`}\n              onClick={() => setLanguage('EN')}\n            >\n              {t.langEN}\n            </button>\n            <span className=\"mid\">|</span>\n            <button\n              className={`lang ${language === 'VN' ? 'active' : ''}`}\n              onClick={() => setLanguage('VN')}\n            >\n              {t.langVN}\n            </button>\n          </div>\n        </header>\n\n        <section className=\"form-wrap\" style={{ color: 'var(--ink)' }}>\n          <div className=\"intro\">\n            <h2 className=\"title\">{t.title}</h2>\n            <p className=\"subtitle\">{t.subtitle}</p>\n          </div>\n\n          <div className=\"auth-form\" style={{ textAlign: 'center', color: 'var(--ink)' }}>\n            <div className=\"field\">\n              <h3 style={{ color: 'var(--gold-2)', fontSize: 22, marginBottom: 6 }}>\n                {t.eventName}\n              </h3>\n              <p>{t.date}</p>\n              <p>{t.location}</p>\n              <p style={{ fontWeight: 700, marginTop: 10 }}>{t.price}</p>\n            </div>\n\n            {/* === Payment confirmed === */}\n            {isPaid ? (\n              <div\n                style={{\n                  marginTop: 20,\n                  color: 'var(--gold-2)',\n                  fontWeight: 700,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: 6,\n                }}\n              >\n                <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n                  <FiCheckCircle size={22} />\n                  {t.success}\n                </div>\n                {transactionId && (\n                  <p style={{ color: 'var(--ink)', marginTop: 4 }}>\n                    Transaction ID: <strong>{transactionId}</strong>\n                  </p>\n                )}\n              </div>\n            ) : (\n              <>\n                {/* QR + Buttons only while waiting for payment */}\n                {qrData && (qrData.qrDataURL || qrData.qrCode) && (\n                  <div style={{ marginTop: 20 }}>\n                    <QRCodeCanvas\n                      value={qrData.qrDataURL || qrData.qrCode}\n                      size={220}\n                      bgColor=\"#ffffff\"\n                      fgColor=\"#000000\"\n                      includeMargin={true}\n                    />\n                    <p style={{ marginTop: 12, color: 'var(--gold-2)' }}>\n                      Scan this code to complete your payment.\n                    </p>\n                  </div>\n                )}\n\n                {!qrData ? (\n                  <button\n                    className=\"cta\"\n                    onClick={handlePayment}\n                    disabled={loading || !user}\n                    style={{\n                      opacity: loading || !user ? 0.6 : 1,\n                      cursor: !user ? 'not-allowed' : 'pointer',\n                    }}\n                  >\n                    <span>\n                      {!user ? 'Login required' : loading ? t.loading : t.payBtn}\n                    </span>\n                    {!loading && user && <FiArrowRight className=\"arrow\" />}\n                  </button>\n                ) : (\n                  <button\n                    className=\"cta\"\n                    onClick={handleTestPayment}\n                    disabled={testLoading}\n                    style={{\n                      backgroundColor: '#00b37a',\n                      marginTop: 10,\n                      opacity: testLoading ? 0.7 : 1,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontWeight: 600,\n                    }}\n                  >\n                    {testLoading ? '⏳' : t.testBtn}\n                  </button>\n                )}\n              </>\n            )}\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default EventPayment;","import React from \"react\";\nimport QRCodeCheckout from \"../componets/shared/Ecommerce/QRCodeCheckout/QRCodeCheckout\";\n\nexport default () => <QRCodeCheckout/>"],"names":["i18n","EN","brandTitle","tagline","features","title","subtitle","eventName","date","location","price","payBtn","loading","success","testBtn","langEN","langVN","VN","EventPayment","language","setLanguage","useState","setLoading","isPaid","setIsPaid","user","setUser","qrData","setQrData","transactionId","setTransactionId","testLoading","setTestLoading","t","useEffect","supabase","auth","getUser","then","_ref","data","console","log","email","id","channel","on","event","schema","table","payload","event_type","eventPayload","new","orderId","warn","JSON","stringify","transactionid","err","error","subscribe","status","removeChannel","React","className","map","f","i","key","onClick","style","color","textAlign","fontSize","marginBottom","fontWeight","marginTop","display","flexDirection","alignItems","justifyContent","gap","FiCheckCircle","size","qrDataURL","qrCode","QRCodeCanvas","value","bgColor","fgColor","includeMargin","async","alert","payload2","bankAccount","content","amount","bankCode","transType","res","fetch","method","headers","body","result","text","disabled","backgroundColor","opacity","user_id","ok","Error","json","qrLink","cursor","FiArrowRight","QRCodeCheckout"],"sourceRoot":""}